
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Canvas, Button, PhotoImage

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def open_sidebar_window(current_window):
    canvas = Canvas(
        current_window,
        bg = "#FFFFFF",
        height = 550,
        width = 700,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    canvas.create_rectangle(
        -2.0,
        88.0,
        700.0,
        90.0,
        fill="#000000",
        outline="")

    canvas.create_rectangle(
        -2.0,
        268.0,
        700.0,
        270.0,
        fill="#000000",
        outline="")

    canvas.create_rectangle(
        -2.0,
        448.0,
        700.0,
        450.0,
        fill="#000000",
        outline="")

    canvas.create_rectangle(
        -2.0,
        358.0,
        700.0,
        360.0,
        fill="#000000",
        outline="")

    canvas.create_rectangle(
        -2.0,
        178.0,
        700.0,
        180.0,
        fill="#000000",
        outline="")

    # 단어장 버튼
    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print('a'),
        relief="flat"
    )
    button_1.place(
        x=0.0,
        y=0.0,
        width=700.0,
        height=88.0
    )

    # 단어테스트 버튼
    button_image_2 = PhotoImage(
        file=relative_to_assets("button_2.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print("단어테스트"),
        relief="flat"
    )
    button_2.place(
        x=0.0,
        y=90.0,
        width=700.0,
        height=88.0
    )

    # 오답노트 버튼
    button_image_3 = PhotoImage(
        file=relative_to_assets("button_3.png"))
    button_3 = Button(
        image=button_image_3,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print("오답노트"),
        relief="flat"
    )
    button_3.place(
        x=0.0,
        y=180.0,
        width=700.0,
        height=88.0
    )

    # 토익 시험 날짜 버튼
    button_image_6 = PhotoImage(
        file=relative_to_assets("button_6.png"))
    button_6 = Button(
        image=button_image_6,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print("토익 시험 날짜"),
        relief="flat"
    )
    button_6.place(
        x=0.0,
        y=270.0,
        width=700.0,
        height=88.0
    )

    # 토익 고사장 안내 버튼
    button_image_4 = PhotoImage(
        file=relative_to_assets("button_4.png"))
    button_4 = Button(
        image=button_image_4,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print("토익 고사장 안내"),
        relief="flat"
    )
    button_4.place(
        x=0.0,
        y=360.0,
        width=700.0,
        height=88.0
    )

    # 시험 점수 조회
    button_image_5 = PhotoImage(
        file=relative_to_assets("button_5.png"))
    button_5 = Button(
        image=button_image_5,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: print("시험 점수 조회"),
        relief="flat"
    )
    button_5.place(
        x=0.0,
        y=450.0,
        width=700.0,
        height=100.0
    )
    current_window.mainloop()

# 실행 확인할 수 있게 임시로 해놓은 것. 코드 병합하면 지울 예정임
if __name__ == "__main__":
    root = tk.Tk()
    my_windows_width = root.winfo_screenwidth()
    my_windows_height = root.winfo_screenheight()
    app_width = 700
    app_height = 550
    center_width = (my_windows_width/2)-(app_width/2)
    center_height = (my_windows_height/2)-(app_height/2)
    root.geometry(f"{app_width}x{app_height}+{int(center_width)}+{int(center_height)}")
    open_sidebar_window(root)